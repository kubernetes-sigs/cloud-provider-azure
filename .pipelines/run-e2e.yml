steps:
  - bash: |
      RESOURCE_GROUP="aks-ci-$(head /dev/urandom | LC_ALL=C tr -dc a-z0-9 | head -c 6 ; echo '')"
      CLUSTER_NAME="aks-cluster"
      echo "##vso[task.setvariable variable=RESOURCE_GROUP]${RESOURCE_GROUP}"
      echo "##vso[task.setvariable variable=CLUSTER_NAME]${CLUSTER_NAME}"
    displayName: set resource group and cluster
  - bash: |
      export IMAGE_REGISTRY=$REGISTRY_URL
      export AZURE_SUBSCRIPTION_ID=$AZ_SUBSCRIPTION_ID
      export AZURE_TENANT_ID=$AZ_TENANT_ID
      export ARTIFACT_DIR=$BUILD_ARTIFACT_STAGING_DIRECTORY
      export KUSTO_INGESTION_URI=$KUSTO_INGESTION_URI

      export RESOURCE_GROUP=$(RESOURCE_GROUP)
      export CLUSTER_NAME=$(CLUSTER_NAME)
      export CLUSTER_TYPE=$(CLUSTER_TYPE)
      export INGEST_TEST_RESULT="true"

      .pipelines/scripts/run-e2e.sh
    displayName: create an aks cluster and run e2e
    env:
      REGISTRY_URL: $(registry.url)
      AZ_SUBSCRIPTION_ID: $(az.subscription_id)
      AZ_TENANT_ID: $(az.tenant_id)
      BUILD_ARTIFACT_STAGING_DIRECTORY: $(Build.ArtifactStagingDirectory)
      BUILD_SOURCE_BRANCH_NAME: $(Build.SourceBranchName)
      KUSTO_INGESTION_URI: $(kusto.ingestion_uri)

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: Logs
    condition: succeededOrFailed()
