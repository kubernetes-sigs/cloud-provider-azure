// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.8, generator: @autorest/go@4.0.0-preview.74)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// Code generated by @autorest/go. DO NOT EDIT.

package armnetwork

// NetworkIntentPolicy - Network Intent Policy resource.
type NetworkIntentPolicy struct {
	// Resource ID.
	ID *string

	// Resource location.
	Location *string

	// Resource tags.
	Tags map[string]*string

	// READ-ONLY; A unique read-only string that changes whenever the resource is updated.
	Etag *string

	// READ-ONLY; Resource name.
	Name *string

	// READ-ONLY; Resource type.
	Type *string
}

// NetworkIntentPolicyConfiguration - Details of NetworkIntentPolicyConfiguration for PrepareNetworkPoliciesRequest.
type NetworkIntentPolicyConfiguration struct {
	// The name of the Network Intent Policy for storing in target subscription.
	NetworkIntentPolicyName *string

	// Source network intent policy.
	SourceNetworkIntentPolicy *NetworkIntentPolicy
}

// NetworkInterface - A network interface in a resource group.
type NetworkInterface struct {
	// The extended location of the network interface.
	ExtendedLocation *ExtendedLocation

	// Resource ID.
	ID *string

	// Resource location.
	Location *string

	// Properties of the network interface.
	Properties *NetworkInterfacePropertiesFormat

	// Resource tags.
	Tags map[string]*string

	// READ-ONLY; A unique read-only string that changes whenever the resource is updated.
	Etag *string

	// READ-ONLY; Resource name.
	Name *string

	// READ-ONLY; Resource type.
	Type *string
}

// NetworkInterfaceDNSSettings - DNS settings of a network interface.
type NetworkInterfaceDNSSettings struct {
	// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS'
	// value cannot be combined with other IPs, it must be the only value in dnsServers
	// collection.
	DNSServers []*string

	// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
	InternalDNSNameLabel *string

	// READ-ONLY; If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers
	// from all NICs that are part of the Availability Set. This property is what is
	// configured on each of those VMs.
	AppliedDNSServers []*string

	// READ-ONLY; Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS
	// name can be constructed by concatenating the VM name with the value of
	// internalDomainNameSuffix.
	InternalDomainNameSuffix *string

	// READ-ONLY; Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
	InternalFqdn *string
}

// NetworkInterfaceIPConfiguration - IPConfiguration in a network interface.
type NetworkInterfaceIPConfiguration struct {
	// Resource ID.
	ID *string

	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string

	// Network interface IP configuration properties.
	Properties *NetworkInterfaceIPConfigurationPropertiesFormat

	// Resource type.
	Type *string

	// READ-ONLY; A unique read-only string that changes whenever the resource is updated.
	Etag *string
}

// NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties - PrivateLinkConnection properties for the network interface.
type NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties struct {
	// READ-ONLY; List of FQDNs for current private link connection.
	Fqdns []*string

	// READ-ONLY; The group ID for current private link connection.
	GroupID *string

	// READ-ONLY; The required member name for current private link connection.
	RequiredMemberName *string
}

// NetworkInterfaceIPConfigurationPropertiesFormat - Properties of IP configuration.
type NetworkInterfaceIPConfigurationPropertiesFormat struct {
	// IP addresses that can be allocated for the given IP configuration.
	AllowedAddresses []*string

	// The reference to ApplicationGatewayBackendAddressPool resource.
	ApplicationGatewayBackendAddressPools []*ApplicationGatewayBackendAddressPool

	// Application security groups in which the IP configuration is included.
	ApplicationSecurityGroups []*ApplicationSecurityGroup

	// The reference to gateway load balancer frontend IP.
	GatewayLoadBalancer *SubResource

	// The reference to LoadBalancerBackendAddressPool resource.
	LoadBalancerBackendAddressPools []*BackendAddressPool

	// A list of references of LoadBalancerInboundNatRules.
	LoadBalancerInboundNatRules []*InboundNatRule

	// Whether this is a primary customer address on the network interface.
	Primary *bool

	// Private IP address of the IP configuration. It can be a single IP address or a CIDR block in the format /.
	PrivateIPAddress *string

	// The private IP address prefix length. If specified and the allocation method is dynamic, the service will allocate a CIDR
	// block instead of a single IP address.
	PrivateIPAddressPrefixLength *int32

	// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
	PrivateIPAddressVersion *IPVersion

	// The private IP address allocation method.
	PrivateIPAllocationMethod *IPAllocationMethod

	// Public IP address bound to the IP configuration.
	PublicIPAddress *PublicIPAddress

	// Subnet bound to the IP configuration.
	Subnet *Subnet

	// The reference to Virtual Network Taps.
	VirtualNetworkTaps []*VirtualNetworkTap

	// READ-ONLY; PrivateLinkConnection properties for the network interface.
	PrivateLinkConnectionProperties *NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties

	// READ-ONLY; The provisioning state of the network interface IP configuration.
	ProvisioningState *ProvisioningState
}

// NetworkInterfacePropertiesFormat - NetworkInterface properties.
type NetworkInterfacePropertiesFormat struct {
	// Auxiliary mode of Network Interface resource.
	AuxiliaryMode *NetworkInterfaceAuxiliaryMode

	// Auxiliary sku of Network Interface resource.
	AuxiliarySKU *NetworkInterfaceAuxiliarySKU

	// The DNS settings in network interface.
	DNSSettings *NetworkInterfaceDNSSettings

	// Indicates whether to disable tcp state tracking.
	DisableTCPStateTracking *bool

	// If the network interface is configured for accelerated networking. Not applicable to VM sizes which require accelerated
	// networking.
	EnableAcceleratedNetworking *bool

	// Indicates whether IP forwarding is enabled on this network interface.
	EnableIPForwarding *bool

	// A list of IPConfigurations of the network interface.
	IPConfigurations []*NetworkInterfaceIPConfiguration

	// Migration phase of Network Interface resource.
	MigrationPhase *NetworkInterfaceMigrationPhase

	// The reference to the NetworkSecurityGroup resource.
	NetworkSecurityGroup *NetworkSecurityGroup

	// Type of Network Interface resource.
	NicType *NetworkInterfaceNicType

	// Privatelinkservice of the network interface resource.
	PrivateLinkService *PrivateLinkService

	// WorkloadType of the NetworkInterface for BareMetal resources
	WorkloadType *string

	// READ-ONLY; Whether default outbound connectivity for nic was configured or not.
	DefaultOutboundConnectivityEnabled *bool

	// READ-ONLY; A reference to the dscp configuration to which the network interface is linked.
	DscpConfiguration *SubResource

	// READ-ONLY; A list of references to linked BareMetal resources.
	HostedWorkloads []*string

	// READ-ONLY; The MAC address of the network interface.
	MacAddress *string

	// READ-ONLY; Whether this is a primary network interface on a virtual machine.
	Primary *bool

	// READ-ONLY; A reference to the private endpoint to which the network interface is linked.
	PrivateEndpoint *PrivateEndpoint

	// READ-ONLY; The provisioning state of the network interface resource.
	ProvisioningState *ProvisioningState

	// READ-ONLY; The resource GUID property of the network interface resource.
	ResourceGUID *string

	// READ-ONLY; A list of TapConfigurations of the network interface.
	TapConfigurations []*NetworkInterfaceTapConfiguration

	// READ-ONLY; The reference to a virtual machine.
	VirtualMachine *SubResource

	// READ-ONLY; Whether the virtual machine this nic is attached to supports encryption.
	VnetEncryptionSupported *bool
}

// NetworkInterfaceTapConfiguration - Tap configuration in a Network Interface.
type NetworkInterfaceTapConfiguration struct {
	// Resource ID.
	ID *string

	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string

	// Properties of the Virtual Network Tap configuration.
	Properties *NetworkInterfaceTapConfigurationPropertiesFormat

	// READ-ONLY; A unique read-only string that changes whenever the resource is updated.
	Etag *string

	// READ-ONLY; Sub Resource type.
	Type *string
}

// NetworkInterfaceTapConfigurationPropertiesFormat - Properties of Virtual Network Tap configuration.
type NetworkInterfaceTapConfigurationPropertiesFormat struct {
	// The reference to the Virtual Network Tap resource.
	VirtualNetworkTap *VirtualNetworkTap

	// READ-ONLY; The provisioning state of the network interface tap configuration resource.
	ProvisioningState *ProvisioningState
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroup struct {
	// Resource ID.
	ID *string

	// Resource location.
	Location *string

	// Properties of the network security group.
	Properties *NetworkSecurityGroupPropertiesFormat

	// Resource tags.
	Tags map[string]*string

	// READ-ONLY; A unique read-only string that changes whenever the resource is updated.
	Etag *string

	// READ-ONLY; Resource name.
	Name *string

	// READ-ONLY; Resource type.
	Type *string
}

// NetworkSecurityGroupPropertiesFormat - Network Security Group resource.
type NetworkSecurityGroupPropertiesFormat struct {
	// When enabled, flows created from Network Security Group connections will be re-evaluated when rules are updates. Initial
	// enablement will trigger re-evaluation.
	FlushConnection *bool

	// A collection of security rules of the network security group.
	SecurityRules []*SecurityRule

	// READ-ONLY; The default security rules of network security group.
	DefaultSecurityRules []*SecurityRule

	// READ-ONLY; A collection of references to flow log resources.
	FlowLogs []*FlowLog

	// READ-ONLY; A collection of references to network interfaces.
	NetworkInterfaces []*NetworkInterface

	// READ-ONLY; The provisioning state of the network security group resource.
	ProvisioningState *ProvisioningState

	// READ-ONLY; The resource GUID property of the network security group resource.
	ResourceGUID *string

	// READ-ONLY; A collection of references to subnets.
	Subnets []*Subnet
}

// ResourceAutoGenerated - Common fields that are returned in the response for all Azure Resource Manager resources
type ResourceAutoGenerated struct {
	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// ServiceGateway resource.
type ServiceGateway struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string

	// Properties of service gateway.
	Properties *ServiceGatewayPropertiesFormat

	// Resource tags.
	Tags map[string]*string

	// READ-ONLY; A unique read-only string that changes whenever the resource is updated.
	Etag *string

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}

// ServiceGatewayAddress - Properties of the service gateway address.
type ServiceGatewayAddress struct {
	// Address to update
	Address *string

	// Collection of services in address.
	Services []*string
}

// ServiceGatewayAddressLocation - Properties of the service gateway address location.
type ServiceGatewayAddressLocation struct {
	// Location to update
	AddressLocation *string

	// Specifies the type of update operation to perform on addresses within the address location of service gateway.
	// * FullUpdate: Replaces all existing address data with the new list provided in the request. Any previously defined addresses
	// not included will be removed.
	// * PartialUpdate: Updates only the specified addresses.
	AddressUpdateAction *ServiceGatewayAddressLocationAddressUpdateAction

	// An array of addresse to create or update in locations.
	Addresses []*ServiceGatewayAddress
}

// ServiceGatewayAddressLocationResponse - Properties of the service gateway address location.
type ServiceGatewayAddressLocationResponse struct {
	// Location to update
	AddressLocation *string

	// An array of addresses to create or update in locations.
	Addresses []*ServiceGatewayAddress
}

// ServiceGatewayListResult - Response for ListServiceGateways API service call.
type ServiceGatewayListResult struct {
	// A list of service gateway in a resource group.
	Value []*ServiceGateway

	// READ-ONLY; The URL to get the next set of results.
	NextLink *string
}

// RouteTargetAddressPropertiesFormat - Properties of route target address
type RouteTargetAddressPropertiesFormat struct {
	// The private IP address of the service gateway route target address.
	PrivateIPAddress *string

	// The Private IP allocation method.
	PrivateIPAllocationMethod *IPAllocationMethod

	// The reference to the subnet resource.
	Subnet *Subnet
}

// GetServiceGatewayServicesResult - Response for get service gateway services.
type GetServiceGatewayServicesResult struct {
	// A list of services of service gateway.
	Value []*ServiceGatewayService

	// READ-ONLY; The URL to get the next set of results.
	NextLink *string
}

// GetServiceGatewayAddressLocationsResult - Response for get service gateway address locations.
type GetServiceGatewayAddressLocationsResult struct {
	// A list of address locations of service gateway.
	Value []*ServiceGatewayAddressLocationResponse

	// READ-ONLY; The URL to get the next set of results.
	NextLink *string
}

// ServiceGatewayPropertiesFormat - Properties of the service gateway.
type ServiceGatewayPropertiesFormat struct {
	// Route Target address of Service gateway
	RouteTargetAddress *RouteTargetAddressPropertiesFormat

	// Route Target address V6 of Service gateway
	RouteTargetAddressV6 *RouteTargetAddressPropertiesFormat

	// Reference to an existing virtual network.
	VirtualNetwork *VirtualNetwork

	// READ-ONLY; The provisioning state of the service gateway resource.
	ProvisioningState *ProvisioningState

	// READ-ONLY; The resource GUID property of the service gateway resource.
	ResourceGUID *string
}

// ServiceGatewayService - Properties of the service gateway service.
type ServiceGatewayService struct {
	// Name of the service
	Name *string

	// Properties of service gateway service.
	Properties *ServiceGatewayServicePropertiesFormat
}

// ServiceGatewayServicePropertiesFormat - Properties of the service gateway service.
type ServiceGatewayServicePropertiesFormat struct {
	// Set to true to mark default service for inbound or outbound.
	IsDefault *bool

	// An array of load balancer backend address pools.
	LoadBalancerBackendPools []*BackendAddressPool

	// Arm Resource Id of public natgateway.
	PublicNatGatewayID *string

	// Name of the service.
	ServiceType *ServiceGatewayServicePropertiesFormatServiceType
}

// ServiceGatewayServiceRequest - Properties of the service gateway services request.
type ServiceGatewayServiceRequest struct {
	// Set to true to mark the service for deletion.
	IsDelete *bool

	// Service of service gateway.
	Service *ServiceGatewayService
}

// ServiceGatewayUpdateAddressLocationsRequest - Properties of the service gateway update address locations request.
type ServiceGatewayUpdateAddressLocationsRequest struct {
	// Specifies the type of update operation to perform on address locations within the service gateway.
	// * FullUpdate: Replaces all existing address location data with the new list provided in the request. Any previously defined
	// locations not included will be removed.
	// * PartialUpdate: Updates only the specified address locations.
	Action *ServiceGatewayUpdateAddressLocationsRequestAction

	// An array of address locations to create or update.
	AddressLocations []*ServiceGatewayAddressLocation
}

// ServiceGatewayUpdateServicesRequest - Properties of the service gateway update services request.
type ServiceGatewayUpdateServicesRequest struct {
	// Specifies the type of update operation to perform on services within the service gateway.
	// * FullUpdate: Replaces all existing services with the new list provided in the request. Any previously defined services
	// not included will be removed.
	// * PartialUpdate: Updates only the specified services.
	Action *ServiceGatewayUpdateServicesRequestAction

	// Collection of service updates.
	ServiceRequests []*ServiceGatewayServiceRequest
}

// TrackedResource - The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags'
// and a 'location'
type TrackedResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string

	// Resource tags.
	Tags map[string]*string

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string

	// READ-ONLY; The name of the resource
	Name *string

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string
}
