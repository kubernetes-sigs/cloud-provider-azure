name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: read

jobs:
  build-cloud-controller-manager:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
          - os: linux
            arch: arm
          - os: linux
            arch: arm64
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit
      - name: Install arm build toolchains
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-arm-linux-gnueabihf gcc-aarch64-linux-gnu
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup Golang
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version-file: go.mod
      - name: Build binary
        run: |
          rm -rf ./bin
          ARCH=${{ matrix.arch }} make bin/azure-cloud-controller-manager
          mv bin/azure-cloud-controller-manager bin/azure-cloud-controller-manager-${{ matrix.os }}-${{ matrix.arch }}
      - uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: cloud-controller-manager-${{ matrix.os }}-${{ matrix.arch }}
          path: bin/azure-cloud-controller-manager-${{ matrix.os }}-${{ matrix.arch }}
          if-no-files-found: error

  build-cloud-node-manager:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
          - os: linux
            arch: arm
          - os: linux
            arch: arm64
          - os: windows
            arch: amd64
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit
      - name: Install arm build toolchains
        run: |
          sudo apt-get update
          sudo apt-get install gcc-arm-linux-gnueabihf gcc-aarch64-linux-gnu
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup Golang
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version-file: go.mod
          cache: true
      - name: Build binary for linux
        if: matrix.os == 'linux'
        run: |
          rm -rf ./bin
          ARCH=${{ matrix.arch }} make bin/azure-cloud-node-manager
          mv bin/azure-cloud-node-manager bin/azure-cloud-node-manager-${{ matrix.os }}-${{ matrix.arch }}
      - name: Build binary for windows
        if: matrix.os == 'windows'
        run: |
          rm -rf ./bin
          ARCH=${{ matrix.arch }} make bin/azure-cloud-node-manager.exe
          mv bin/azure-cloud-node-manager-${{ matrix.arch }}.exe bin/azure-cloud-node-manager-${{ matrix.os }}-${{ matrix.arch }}.exe
      - name: Upload artifact for linux
        if: matrix.os == 'linux'
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: cloud-node-manager-${{ matrix.os }}-${{ matrix.arch }}
          path: bin/azure-cloud-node-manager-${{ matrix.os }}-${{ matrix.arch }}
      - name: Upload artifact for windows
        if: matrix.os == 'windows'
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: cloud-node-manager-${{ matrix.os }}-${{ matrix.arch }}
          path: bin/azure-cloud-node-manager-${{ matrix.os }}-${{ matrix.arch }}.exe
          if-no-files-found: error

  build-acr-credential-provider:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
          - os: linux
            arch: arm
          - os: linux
            arch: arm64
          - os: windows
            arch: amd64
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit
      - name: Install arm build toolchains
        run: |
          sudo apt-get update
          sudo apt-get install gcc-arm-linux-gnueabihf gcc-aarch64-linux-gnu
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup Golang
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version-file: go.mod
      - name: Build binary for linux
        if: matrix.os == 'linux'
        run: |
          rm -rf ./bin
          ARCH=${{ matrix.arch }} make bin/azure-acr-credential-provider
          mv bin/azure-acr-credential-provider bin/azure-acr-credential-provider-${{ matrix.os }}-${{ matrix.arch }}
      - name: Build binary for windows
        if: matrix.os == 'windows'
        run: |
          rm -rf ./bin
          ARCH=${{ matrix.arch }} make bin/azure-acr-credential-provider.exe
          mv bin/azure-acr-credential-provider.exe bin/azure-acr-credential-provider-${{ matrix.os }}-${{ matrix.arch }}.exe
      - name: Upload artifact for linux
        if: matrix.os == 'linux'
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: acr-credential-provider-${{ matrix.os }}-${{ matrix.arch }}
          path: bin/azure-acr-credential-provider-${{ matrix.os }}-${{ matrix.arch }}
      - name: Upload artifact for windows
        if: matrix.os == 'windows'
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: acr-credential-provider-${{ matrix.os }}-${{ matrix.arch }}
          path: bin/azure-acr-credential-provider-${{ matrix.os }}-${{ matrix.arch }}.exe
          if-no-files-found: error

  publish:
    runs-on: ubuntu-latest
    needs:
      - build-cloud-controller-manager
      - build-cloud-node-manager
      - build-acr-credential-provider
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit
      - name: Install arm build toolchains
        run: |
          sudo apt-get update
          sudo apt-get install gcc-arm-linux-gnueabihf
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: documentation
          fetch-depth: 0
      - name: Setup Golang
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version: '>=1.22'
          check-latest: true
      - name: Generate release note
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          ./hack/generate-release-note.sh ${GITHUB_REF_NAME} release-notes.md true
      - name: Download artifacts
        uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
        with:
          path: ./artifacts
      - name: Publish release
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda # v2.2.1
        with:
          body_path: release-notes.md
          draft: true
          files: |
            ./artifacts/cloud-node-manager-*-*/*
            ./artifacts/cloud-controller-manager-*-*/*
            ./artifacts/acr-credential-provider-*-*/*
